"""Async gRPC stubs for the Jito auth service.

The real project uses code generated by ``grpcio-tools``.  This lightweight
standâ€‘in provides the small subset of functionality required for the examples in
this repository and returns a dummy token.
"""

from __future__ import annotations

from . import auth_service_pb2


class AuthServiceStub:
    """Placeholder asynchronous client stub.

    The stub does not perform any network operations; instead,
    :meth:`GenerateAuthToken` simply returns a response object with an empty
    token.  This keeps example scripts functional in environments where the real
    protobuf definitions are unavailable.
    """

    def __init__(self, channel) -> None:  # pragma: no cover - simple storage
        self.channel = channel

    async def GenerateAuthToken(
        self, request: auth_service_pb2.GenerateAuthTokenRequest
    ) -> auth_service_pb2.GenerateAuthTokenResponse:
        """Return a dummy :class:`GenerateAuthTokenResponse`."""
        return auth_service_pb2.GenerateAuthTokenResponse(token="")

